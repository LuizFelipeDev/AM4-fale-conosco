// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace AM4.DATA
{
    public partial class AM4_BDContext : DbContext
    {
        public AM4_BDContext()
        {
        }

        public AM4_BDContext(DbContextOptions<AM4_BDContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<FaleConosco> FaleConosco { get; set; }
        public virtual DbSet<Mensagem> Mensagem { get; set; }
        public virtual DbSet<Pessoa> Pessoa { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=FLPPC\\FLPPC;Initial Catalog=AM4_BD;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Estado>(entity =>
            {
                entity.Property(e => e.Nome).IsUnicode(false);
            });

            modelBuilder.Entity<FaleConosco>(entity =>
            {
                entity.HasOne(d => d.IdmensagemNavigation)
                    .WithMany(p => p.FaleConosco)
                    .HasForeignKey(d => d.Idmensagem)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Fale_Conosco_Mensagem");

                entity.HasOne(d => d.IdpessoaNavigation)
                    .WithMany(p => p.FaleConosco)
                    .HasForeignKey(d => d.Idpessoa)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Fale_Conosco_Pessoa");
            });

            modelBuilder.Entity<Mensagem>(entity =>
            {
                entity.Property(e => e.TextoMensagem).IsUnicode(false);

                entity.Property(e => e.TituloMensagem).IsUnicode(false);
            });

            modelBuilder.Entity<Pessoa>(entity =>
            {
                entity.Property(e => e.Bairro).IsUnicode(false);

                entity.Property(e => e.Cidade).IsUnicode(false);

                entity.Property(e => e.Complemento).IsUnicode(false);

                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.Nome).IsUnicode(false);

                entity.Property(e => e.Numero).IsUnicode(false);

                entity.Property(e => e.Rua).IsUnicode(false);

                entity.HasOne(d => d.IdestadoNavigation)
                    .WithMany(p => p.Pessoa)
                    .HasForeignKey(d => d.Idestado)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pessoa_Estado");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}